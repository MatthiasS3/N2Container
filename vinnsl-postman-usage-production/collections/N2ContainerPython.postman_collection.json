{
	"info": {
		"_postman_id": "d21046f8-70db-4b41-91e6-20b52aa727e0",
		"name": "N2ContainerPython",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "IRIS",
			"item": [
				{
					"name": "Create new Network (Description)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<vinnsl>\n  <description>\n    <identifier><!-- will be generated --></identifier>\n    <metadata>\n      <paradigm>classification</paradigm>\n      <name>Backpropagation Classification</name>\n      <description>Iris Classification Example</description>\n      <version>\n        <major>1</major>\n        <minor>0</minor>\n      </version>\n    </metadata>\n    <creator>\n      <name>Ronald Fisher</name>\n      <contact>ronald.fisher@institution.com</contact>\n    </creator>\n    <problemDomain>\n      <propagationType type=\"feedforward\">\n        <learningType>supervised</learningType>\n      </propagationType>\n      <applicationField>Classification</applicationField>\n      <networkType>Backpropagation</networkType>\n      <problemType>Classifiers</problemType>\n    </problemDomain>\n    <endpoints>\n      <train>true</train>\n      <retrain>true</retrain>\n      <evaluate>true</evaluate>\n    </endpoints>\n    <structure>\n\t   <input>\n\t    <ID>Input1</ID>\n\t    <size>4</size>\n\t   </input>\n\t   <hidden>\n\t    <ID>Hidden1</ID>\n\t    <size>10</size>\n\t   </hidden>\n\t   <hidden>\n\t    <ID>Hidden2</ID>\n\t    <size>10</size>\n\t   </hidden>\n\t   <output>\n\t    <ID>Output1</ID>\n\t    <size>3</size>\n\t   </output>\n\t </structure>\n\t <data>\n\t \t<description>iris txt file with 3 classifications, 4 input vars</description>\n\t \t<tabledescription>no input as table possible</tabledescription>\n\t \t<filedescription>CSV file</filedescription>\n\t </data>\n  </description>\n</vinnsl>"
						},
						"url": {
							"raw": "{{cluster.protocol}}://{{cluster.ip}}/vinnsl/",
							"protocol": "{{cluster.protocol}}",
							"host": [
								"{{cluster.ip}}"
							],
							"path": [
								"vinnsl",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Definition to Vinnsl Network",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<definition>\n<identifier><!-- will be generated --></identifier>\n<metadata>\n  <paradigm>classification</paradigm>\n  <name>Backpropagation Classification</name>\n  <description>Iris Classification Example</description>\n  <version>\n    <major>1</major>\n    <minor>0</minor>\n  </version>\n</metadata>\n<creator>\n  <name>Ronald Fisher</name>\n  <contact>ronald.fisher@institution.com</contact>\n</creator>\n<problemDomain>\n  <propagationType type=\"feedforward\">\n    <learningType>supervised</learningType>\n  </propagationType>\n  <applicationField>Classification</applicationField>\n  <networkType>Backpropagation</networkType>\n  <problemType>Classifiers</problemType>\n</problemDomain>\n<endpoints>\n  <train>true</train>\n</endpoints>\n<executionEnvironment>\n\t<serial>true</serial>\n</executionEnvironment>\n<structure>\n   <input>\n    <ID>Input1</ID>\n    <size>4</size>\n   </input>\n   <hidden>\n    <ID>Hidden1</ID>\n    <size>10</size>\n   </hidden>\n   <hidden>\n    <ID>Hidden2</ID>\n    <size>10</size>\n   </hidden>\n   <output>\n    <ID>Output1</ID>\n    <size>3</size>\n   </output>\n</structure>\n <resultSchema>\n \t<instance>true</instance>\n \t<training>true</training>\n </resultSchema>\n <parameters>\n \t<valueparameter name=\"learningrate\">0.001</valueparameter>\n\t<comboparameter name=\"activationfunction\">relu</comboparameter>\n\t<valueparameter name=\"epochs\">1000</valueparameter>\n\t<valueparameter name=\"seed\">6</valueparameter>\n\t<valueparameter name=\"labelIndex\">4</valueparameter>\n </parameters>\n <data>\n \t<description>iris txt file with 3 classifications, 4 input vars</description>\n\t<dataSchemaID>name/iris.txt</dataSchemaID>\n </data>\n</definition>"
						},
						"url": {
							"raw": "{{cluster.protocol}}://{{cluster.ip}}/vinnsl/5cb33c476522050001e872fc/definition",
							"protocol": "{{cluster.protocol}}",
							"host": [
								"{{cluster.ip}}"
							],
							"path": [
								"vinnsl",
								"5cb33c476522050001e872fc",
								"definition"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "MNIST",
			"item": [
				{
					"name": "Create new Network (Description)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<vinnsl>\n  <description>\n    <identifier><!-- will be generated --></identifier>\n    <metadata>\n      <paradigm>Deep Learning</paradigm>\n      <name>MNIST Digit Recognition</name>\n      <description>MNIST Digit Recognition Example</description>\n      <version>\n        <major>1</major>\n        <minor>0</minor>\n      </version>\n    </metadata>\n    <creator>\n      <name>Author</name>\n      <contact>author@institution.com</contact>\n    </creator>\n    <problemDomain>\n      <propagationType type=\"feedforward\">\n        <learningType>supervised</learningType>\n      </propagationType>\n      <applicationField>DeepLearning</applicationField>\n      <networkType>Backpropagation</networkType>\n      <problemType>DeepLearning</problemType>\n    </problemDomain>\n    <endpoints>\n      <train>true</train>\n      <retrain>true</retrain>\n      <evaluate>true</evaluate>\n    </endpoints>\n    <structure>\n     <input>\n      <ID>Input1</ID>\n      <size>784</size>\n     </input>\n     <hidden>\n      <ID>DenseLayer</ID>\n      <size>500</size>\n     </hidden>\n     <hidden>\n      <ID>DenseLayer</ID>\n      <size>300</size>\n     </hidden>\n     <hidden>\n      <ID>DenseLayer</ID>\n      <size>100</size>\n     </hidden>\n     <output>\n      <ID>Output1</ID>\n      <size>10</size>\n     </output>\n    </structure>\n\t <parameters>\n\t </parameters>\n\t <data>\n\t </data>\n  </description>\n</vinnsl>"
						},
						"url": {
							"raw": "{{cluster.protocol}}://{{cluster.ip}}/vinnsl/",
							"protocol": "{{cluster.protocol}}",
							"host": [
								"{{cluster.ip}}"
							],
							"path": [
								"vinnsl",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Definition to Vinnsl Network",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<definition>\n<identifier><!-- will be generated --></identifier>\n<metadata>\n  <paradigm>Deep Learning</paradigm>\n  <name>MNIST Digit Recognition</name>\n  <description>MNIST Digit Recognition Example</description>\n  <version>\n    <major>1</major>\n    <minor>0</minor>\n  </version>\n</metadata>\n<creator>\n  <name>Matthias Seeber</name>\n  <contact>author@institution.com</contact>\n</creator>\n<problemDomain>\n  <propagationType type=\"feedforward\">\n    <learningType>supervised</learningType>\n  </propagationType>\n  <applicationField>Deep Learning</applicationField>\n  <networkType>Backpropagation</networkType>\n  <problemType>Deep Learning</problemType>\n</problemDomain>\n<endpoints>\n  <train>true</train>\n</endpoints>\n<executionEnvironment>\n\t<serial>true</serial>\n</executionEnvironment>\n<structure>\n   <input>\n    <ID>Input1</ID>\n    <size>784</size>\n   </input>\n   <hidden>\n    <ID>DenseLayer</ID>\n    <size>500</size>\n   </hidden>\n   <hidden>\n    <ID>DenseLayer</ID>\n    <size>300</size>\n   </hidden>\n   <hidden>\n    <ID>DenseLayer</ID>\n    <size>100</size>\n   </hidden>\n   <output>\n    <ID>Output1</ID>\n    <size>10</size>\n   </output>\n   <connections>\n   \t<!--<fullconnected>\n   \t\t<fromblock>Input1</fromblock>\n   \t\t<toblock>DenseLayer</toblock>\n   \t\t<fromblock>DenseLayer</fromblock>\n   \t\t<toblock>Output1</toblock>\n   \t</fullconnected>-->\n   </connections>\n </structure>\n <resultSchema>\n \t<instance>true</instance>\n \t<training>true</training>\n </resultSchema>\n <parameters>\n \t<valueparameter name=\"learningrate\">0.0005</valueparameter>\n\t<valueparameter name=\"epochs\">8</valueparameter>\n\t<valueparameter name=\"seed\">123</valueparameter>\n\t<valueparameter name=\"momentum\">0.9</valueparameter>\n </parameters>\n <data>\n \t<description>Tensorflow Python MNIST Dataset</description>\n </data>\n</definition>"
						},
						"url": {
							"raw": "{{cluster.protocol}}://{{cluster.ip}}/vinnsl/5d76974e149b3f0001f09a58/definition",
							"protocol": "{{cluster.protocol}}",
							"host": [
								"{{cluster.ip}}"
							],
							"path": [
								"vinnsl",
								"5d76974e149b3f0001f09a58",
								"definition"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "WINE",
			"item": [
				{
					"name": "Create new Network (Description)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<vinnsl>\n  <description>\n    <identifier><!-- will be generated --></identifier>\n    <metadata>\n      <paradigm>classification</paradigm>\n      <name>Backpropagation Classification</name>\n      <description>Wine Classification Example</description>\n      <version>\n        <major>1</major>\n        <minor>0</minor>\n      </version>\n    </metadata>\n    <creator>\n      <name>Matthias Seeber</name>\n      <contact>nussbaum@institution.com</contact>\n    </creator>\n    <problemDomain>\n      <propagationType type=\"feedforward\">\n        <learningType>supervised</learningType>\n      </propagationType>\n      <applicationField>Classification</applicationField>\n      <networkType>Backpropagation</networkType>\n      <problemType>Classifiers</problemType>\n    </problemDomain>\n    <endpoints>\n      <train>true</train>\n      <retrain>true</retrain>\n      <evaluate>true</evaluate>\n    </endpoints>\n    <structure>\n\t   <input>\n\t    <ID>Input</ID>\n\t    <size>\n\t    \t<min>2</min>\n\t    \t<max>2</max>\n\t    </size>\n\t   </input>\n\t   <hidden>\n\t    <ID>Hidden</ID>\n\t    <size>\n\t    \t<min>3</min>\n\t    \t<max>3</max>\n\t    </size>\n\t   </hidden>\n\t   <hidden>\n\t    <ID>Hidden</ID>\n\t    <size>\n\t    \t<min>3</min>\n\t    \t<max>3</max>\n\t    </size>\n\t   </hidden>\n\t   <output>\n\t    <ID>Output</ID>\n\t    <size>\n\t    \t<min>2</min>\n\t    \t<max>2</max>\n\t    </size>\n\t   </output>\n\t </structure>\n\t <!--<parameters>\n\t \t<valueparameter>learningrate</valueparameter>\n\t \t<valueparameter>biasInput</valueparameter>\n\t \t<valueparameter>biasHidden</valueparameter>\n\t \t<valueparameter>momentum</valueparameter>\n\t \t<comboparameter>ativationfunction</comboparameter>\n\t \t<valueparameter>threshold</valueparameter>\n\t </parameters>-->\n\t <data>\n\t \t<description>wine csv file with 2 classifications, \n\t \t2 input vars</description>\n\t \t<tabledescription>no input as table possible</tabledescription>\n\t \t<filedescription>CSV file</filedescription>\n\t </data>\n  </description>\n</vinnsl>"
						},
						"url": {
							"raw": "{{cluster.protocol}}://{{cluster.ip}}/vinnsl/",
							"protocol": "{{cluster.protocol}}",
							"host": [
								"{{cluster.ip}}"
							],
							"path": [
								"vinnsl",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Definition to Vinnsl Network",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<definition>\n<identifier><!-- will be generated --></identifier>\n<metadata>\n  <paradigm>classification</paradigm>\n   <name>Backpropagation Classification</name>\n   <description>Wine Classification Example</description>\n  <version>\n    <major>1</major>\n    <minor>0</minor>\n  </version>\n</metadata>\n<creator>\n  <name>Nussbaum</name>\n  <contact>nussbaum@institution.com</contact>\n</creator>\n<problemDomain>\n  <propagationType type=\"feedforward\">\n    <learningType>supervised</learningType>\n  </propagationType>\n  <applicationField>Classification</applicationField>\n  <networkType>Backpropagation</networkType>\n  <problemType>Classifiers</problemType>\n</problemDomain>\n<endpoints>\n  <train>true</train>\n</endpoints>\n<executionEnvironment>\n\t<serial>true</serial>\n</executionEnvironment>\n<structure>\n   <input>\n    <ID>Input</ID>\n    <size>2</size>\n   </input>\n   <hidden>\n    <ID>Hidden</ID>\n    <size>3</size>\n   </hidden>\n   <hidden>\n    <ID>Hidden</ID>\n    <size>3</size>\n   </hidden>\n   <output>\n    <ID>Output</ID>\n    <size>2</size>\n   </output>\n   <connections>\n   </connections>\n </structure>\n <resultSchema>\n \t<instance>true</instance>\n \t<training>true</training>\n </resultSchema>\n <parameters>\n \t<valueparameter name=\"learningrate\">0.1</valueparameter>\n\t<comboparameter name=\"activationfunction\">tanh</comboparameter>\n\t<valueparameter name=\"iterations\">500</valueparameter>\n\t<valueparameter name=\"seed\">6</valueparameter>\n </parameters>\n <data>\n \t<description>wine csv file with 2 classifications,\n    2 input vars</description>\n\t<dataSchemaID>name/wines.csv</dataSchemaID>\n </data>\n</definition>"
						},
						"url": {
							"raw": "{{cluster.protocol}}://{{cluster.ip}}/vinnsl/5d8d10b49194be0001a655c4/definition",
							"protocol": "{{cluster.protocol}}",
							"host": [
								"{{cluster.ip}}"
							],
							"path": [
								"vinnsl",
								"5d8d10b49194be0001a655c4",
								"definition"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "LSTM",
			"item": [
				{
					"name": "Create new Network (Description)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<vinnsl>\n  <description>\n    <identifier><!-- will be generated --></identifier>\n    <metadata>\n      <paradigm>Deep Learning</paradigm>\n      <name>LSTM (Long Short Term Memory) Text Generation</name>\n      <description>LSTM (Long Short Term Memory) Text Generation</description>\n      <version>\n        <major>1</major>\n        <minor>0</minor>\n      </version>\n    </metadata>\n    <creator>\n      <name>Author</name>\n      <contact>author@institution.com</contact>\n    </creator>\n    <problemDomain>\n      <propagationType type=\"feedforward\">\n        <learningType>supervised</learningType>\n      </propagationType>\n      <applicationField>DeepLearning</applicationField>\n      <networkType>Backpropagation</networkType>\n      <problemType>DeepLearning</problemType>\n    </problemDomain>\n    <endpoints>\n      <train>true</train>\n      <retrain>true</retrain>\n      <evaluate>true</evaluate>\n    </endpoints>\n    <structure>\n\t   <input>\n\t    <ID>LSTM1</ID>\n\t    <size>\n\t    \t<min>100</min>\n\t    \t<max>100</max>\n\t    </size>\n\t   </input>\n\t   <hidden>\n\t    <ID>Dense</ID>\n\t    <size>\n\t    \t<min>100</min>\n\t    \t<max>100</max>\n\t    </size>\n\t   </hidden>\n\t   <output>\n\t    <ID>Dense</ID>\n\t    <size>\n\t    \t<min>100</min>\n\t    \t<max>100</max>\n\t    </size>\n\t   </output>\n\t </structure>\n\t <parameters>\n\t </parameters>\n\t <data>\n\t </data>\n  </description>\n</vinnsl>"
						},
						"url": {
							"raw": "{{cluster.protocol}}://{{cluster.ip}}/vinnsl/",
							"protocol": "{{cluster.protocol}}",
							"host": [
								"{{cluster.ip}}"
							],
							"path": [
								"vinnsl",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Definition to Vinnsl Network",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/xml"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "<definition>\n<identifier><!-- will be generated --></identifier>\n<metadata>\n  <paradigm>Deep Learning</paradigm>\n    <name>LSTM (Long Short Term Memory) Text Generation</name>\n      <description>LSTM (Long Short Term Memory) Text Generation</description>\n  <version>\n    <major>1</major>\n    <minor>0</minor>\n  </version>\n</metadata>\n<creator>\n  <name>Author</name>\n  <contact>author@institution.com</contact>\n</creator>\n<problemDomain>\n  <propagationType type=\"feedforward\">\n    <learningType>supervised</learningType>\n  </propagationType>\n  <applicationField>Deep Learning</applicationField>\n  <networkType>Backpropagation</networkType>\n  <problemType>Deep Learning</problemType>\n</problemDomain>\n<endpoints>\n  <train>true</train>\n</endpoints>\n<executionEnvironment>\n\t<serial>true</serial>\n</executionEnvironment>\n<structure>\n   <input>\n    <ID>LSTM</ID>\n    <size>0</size>\n   </input>\n   <hidden>\n    <ID>LSTM</ID>\n    <size>0</size>\n   </hidden>\n   <output>\n    <ID>Dense</ID>\n    <size>0</size>\n   </output>\n   \n   <connections>\n   \t<!--<fullconnected>\n   \t\t<fromblock>Input1</fromblock>\n   \t\t<toblock>DenseLayer</toblock>\n   \t\t<fromblock>DenseLayer</fromblock>\n   \t\t<toblock>Output1</toblock>\n   \t</fullconnected>-->\n   </connections>\n </structure>\n <resultSchema>\n \t<instance>true</instance>\n \t<training>true</training>\n </resultSchema>\n <parameters>\n \t<valueparameter name=\"learningrate\">0.01</valueparameter>\n\t<valueparameter name=\"epochs\">60</valueparameter>\n\t<valueparameter name=\"batchsize\">128</valueparameter>\n\t<comboparameter name=\"activationfunction\">softmax</comboparameter>\n\t<valueparameter name=\"seed\">123</valueparameter>\n\t<valueparameter name=\"momentum\">0.9</valueparameter>\n </parameters>\n <data>\n \t<description>LSTM Dataset</description>\n </data>\n</definition>"
						},
						"url": {
							"raw": "{{cluster.protocol}}://{{cluster.ip}}/vinnsl/5cb3443d652205000169e61f/definition",
							"protocol": "{{cluster.protocol}}",
							"host": [
								"{{cluster.ip}}"
							],
							"path": [
								"vinnsl",
								"5cb3443d652205000169e61f",
								"definition"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}